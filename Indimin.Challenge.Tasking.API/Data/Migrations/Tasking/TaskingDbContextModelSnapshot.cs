// <auto-generated />
using Indimin.Challenge.Tasking.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Indimin.Challenge.Tasking.API.Data.Migrations.Tasking
{
    [DbContext(typeof(TaskingDbContext))]
    partial class TaskingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("citizentaskseq", "IndiminChallenge")
                .IncrementsBy(10);

            modelBuilder.Entity("Indimin.Challenge.Tasking.Domain.Models.CitizenTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "citizentaskseq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "IndiminChallenge")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("_citizenId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CitizenId");

                    b.Property<int>("_dayOfWeek")
                        .HasColumnType("int")
                        .HasColumnName("DayOfWeek");

                    b.Property<string>("_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool>("_isActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.HasKey("Id");

                    b.HasIndex("_dayOfWeek");

                    b.ToTable("CitizenTask", "IndiminChallenge");
                });

            modelBuilder.Entity("Indimin.Challenge.Tasking.Domain.Models.DayOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("DayOfWeek", "IndiminChallenge");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lunes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Martes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Miercoles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jueves"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Viernes"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sabado"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Domingo"
                        });
                });

            modelBuilder.Entity("Indimin.Challenge.Tasking.Domain.Models.CitizenTask", b =>
                {
                    b.HasOne("Indimin.Challenge.Tasking.Domain.Models.DayOfWeek", null)
                        .WithMany()
                        .HasForeignKey("_dayOfWeek")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
